@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: antialiased;
    font-family: 'Poppins', sans-serif;
    /* font-weight: normal; */
}

html, body {
    color: #212121;
}

:root {
    --table-header-blue: #3b82f6;
    --table-header-green: #38a16d;
}

/* Custom Scrollbar */
::-webkit-scrollbar {
    width: 9px;
    height: 6px;
    @media only screen and (max-width: 1024px) {
        display: none;
    }
}

::-webkit-scrollbar-track {
    background-color: #f1f1f1;
}

::-webkit-scrollbar-thumb {
    background-color: var(--chakra-colors-primary-500);
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background-color: var(--chakra-colors-primary-600);
}

/* Define a mixin to increase HSL values */
@mixin increase-hsl($color, $steps, $saturation-increment, $lightness-increment) {
    /* Calculate step increment */
    $step-size: calc(100% / ($steps + 1));

    @for $i from 1 through $steps {
        /* Calculate new HSL values */
        $new-hue: hue($color);
        $new-saturation: saturation($color) + $saturation-increment;
        $new-lightness: lightness($color) + $lightness-increment;

        /* Apply the new HSL values */
        background-color: hsl($new-hue, $new-saturation, $new-lightness);
    }
}

  /* Define your main table style */
$table-style: (
    /* border: 1px solid black, */
    /* Add any other styles you want for your tables */
);

  /* Mixin to apply the style and increase HSL */
@mixin styled-table($color, $steps, $saturation-increment, $lightness-increment) {
    @include increase-hsl($color, $steps, $saturation-increment, $lightness-increment);
    @each $property, $value in $table-style {
        #{$property}: $value;
    }
}

#notification {
    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    padding: 0.5rem 1rem;
    background-color: #405D72;
    color: white;
    border-radius: 10rem;
    max-width: 30rem;
    min-width: 10rem;
    z-index: 10000;
    text-align: center;
    bottom: -10rem;
    transition: bottom 0.15s ease-in-out;
    font-weight: 500;
    font-size: 0.85rem;
    &.active {
        bottom: 1rem;
    }
    &.success {
        background-color: #059212;
    }
    &.error {
        background-color: #C7253E;
    }
    &.warning {
        background-color: #E85C0D;
    }
    &.info {
        background-color: #3FA2F6;
    }
}

/* Lightcase */
.yarl__container {
    backdrop-filter: blur(4px) !important;
    background-color: rgba(0, 0, 0, 0.7) !important;

    img {
        border-radius: 0.375rem;
    }
}

.nil {
    font-style: italic;
    opacity: 0.5;
}

.table-responsive {
    overflow-x: auto;
    width: 100%;
    border-radius: 10px;
    border: 1px solid #e0e0e0;

    table {
        background-color: white;
        thead {
            tr {
                th {
                    white-space: nowrap;
                    text-transform: capitalize;
                }
            }
        }
        table {
            @include styled-table(#eeeeee, 3, 0%, 10%);
        }
    }
}

select {
    optgroup {
        color: var(--chakra-colors-primary-500);
    }
    option {
        color: var(--chakra-colors-gray-800);
    }
}

input[type=file] {
    cursor: pointer;
    &::-webkit-file-upload-button {
        cursor: pointer;
    }
}

.chakra-switch__track {
    padding: 2px !important;
}

.page-heading {
    font-size: 1.5rem !important;
    font-weight: 300 !important;
    color: #333 !important;
    font-family: 'Poppins', sans-serif !important;
    white-space: nowrap;
}

@media only screen and (max-width: 768px) {
    .page-heading {
        font-size: 1.2rem !important;
    }
}

.chakra-switch__track {
    background: #d4d4d4 !important;
    &[data-checked] {
        background: var(--chakra-colors-green-500) !important;
    }
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.image-as-icon {
    width: 14px;
    @media only screen and (min-width: 1600px) {
        width: 18px;
    }
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}